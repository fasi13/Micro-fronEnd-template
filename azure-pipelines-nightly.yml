name: $(MajorVersion).$(MinorVersion).$(PatchVersion).$(RevisionVersion)

# CI builds nightly
trigger:
- none

schedules:
- cron: '00 0 * * *'
  displayName: Every night at 00:00
  branches:
    include:
    - develop

pool:
  name: Rideau

variables:
  MajorVersion: 1
  MinorVersion: 3
  PatchVersion: 0
  RevisionVersion: $[counter('revision-counter', 0)]
  project: 'E2E.Admin.UI'

steps:
- task: SonarQubePrepare@4
  displayName: 'SonarQube Prepare'
  inputs:
    SonarQube: 'SonarQube-Rideau-PD'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: '$(project)'
    cliProjectName: '$(project)'
    cliSources: '.'
    extraProperties: |
        sonar.sources=src
        sonar.exclusions=**/node_modules/**,src/assets/**,src/styles/tailwind.css,src/util/immer.ts,src/__mocks__/**,src/*.icon.tsx,src/index.tsx,src/**/*.test.tsx,src/*.test.tsx,src/setupTests.ts,src/reportWebVitals.ts
        sonar.tests=src
        sonar.test.inclusions=**/*.test.ts;**/*.test.js;**/*.test.tsx
        sonar.typescript.lcov.reportPaths=coverage/lcov.info
        sonar.branch.name=$(Build.SourceBranchName)

- task: NodeTool@0
  inputs:
    versionSpec: '14.x'
  displayName: 'Check/Install Node.js'

- task: Npm@1
  displayName: 'Install Npm Dependencies'
  inputs:
    command: install

- task: Npm@1
  displayName: 'Update Npm Dependencies'
  inputs:
    command: custom
    customCommand: 'update'

- task: Npm@1
  displayName: 'Run Tests'
  inputs:
    command: custom
    customCommand: 'run test:ci'

- task: PublishTestResults@2
  displayName: "supply npm test test results to pipeline"
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-results.xml'

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/*coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/coverage'
    failIfCoverageEmpty: true

- task: SonarQubeAnalyze@4
  displayName: 'SonarQube Analyze'

- task: SonarQubePublish@4
  displayName: 'SonarQube Publish'
  inputs:
    pollingTimeoutSec: '300'

- task: sonar-buildbreaker@8
  displayName: 'SonarQube Build Breaker'
  inputs:
    SonarQube: 'SonarQube-Rideau-PD'

- task: Npm@1
  displayName: 'Build Project'
  inputs:
    command: custom
    customCommand: run build

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(project)@$(MajorVersion).$(MinorVersion).$(PatchVersion).$(RevisionVersion)'
    targetPath: 'build'
    publishLocation: 'Container'
